variables:
  FF_SCRIPT_SECTIONS: "true"
  GIT_CLONE_PATH: "${CI_BUILDS_DIR}/${CI_PROJECT_NAME}/${CI_JOB_ID}"

include:
  - component: gitlab.library.upenn.edu/devops/gitlab/components/general/install_hashicorp_vault@~latest
  - component: gitlab.library.upenn.edu/devops/gitlab/components/general/vault_jwt_auth@~latest
    inputs:
        vault_addr: ${VAULT_ADDR}
        vault_auth_path: ${VAULT_AUTH_PATH}
        vault_auth_role: ${VAULT_AUTH_ROLE}

  - project: "devops/gitlab/ci-templates/ruby"
    ref: "sans-dind"
    file:
      - ".rspec.yml"
      - ".rubocop.yml"

stages:
  - test
  - deploy

rspec_app_test:
  stage: test
  image: ruby:3.2.2
  before_script:
    - bundle install -j $(nproc)
  extends:
    - .rspec
  tags:
    - build

rubocop_app_test:
  stage: test
  image: ruby:3.2.2
  before_script:
    - bundle install -j $(nproc)
  extends:
    - .rubocop
  tags:
    - build

# This step was inspired from Gitlab's example of gem publication:
# https://gitlab.com/gitlab-org/quality/pipeline-common/-/blob/master/ci/gem-release.yml
gem_publication:
  stage: deploy
  image: ruby:3.2.2
  extends:
    - .vault_jwt_auth
  variables:
    GEMSPEC_FILE: "${CI_PROJECT_NAME}.gemspec"
  before_script:
    - !reference [.install_hashicorp_vault, before_script]
    - !reference [.vault_jwt_auth, before_script]
  script:
    - export GEM_HOST_API_KEY="$(vault kv get -field=rubygems_api_key ${VAULT_KV_ENDPOINT}${ENVIRONMENT})"
    - |
      gem -v
      rm -f ./*.gem
      [ -f "${GEMSPEC_FILE}" ] || (echo "No ${GEMSPEC_FILE} file found!" && exit 1)
    - '[ -n "${GEM_HOST_API_KEY}" ] || (echo "GEM_HOST_API_KEY is not set!" && exit 1)'
    - GEM_FILE=$(echo "${CI_PROJECT_NAME}-${CI_COMMIT_TAG:1}.gem")
    - |
      gem build "${GEMSPEC_FILE}"
      [ -f "${GEM_FILE}" ] || (echo "No ${GEM_FILE} file found!" && exit 1)
    - '[ "${DISABLE_GEM_PUSH}" == "true" ] || gem push "${GEM_FILE}"'
  rules:
     - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+(\.[a-zA-Z0-9]+)?$/
  artifacts:
    paths:
      - "*.gem"
  tags:
    - deploy
